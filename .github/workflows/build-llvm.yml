# This is a basic workflow to help you get started with Actions

name: CI
env:
  llvm_version: 10.0.1

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          repository: 'llvm/llvm-project'
          ref: 'llvmorg-${{ env.llvm_version }}'
          fetch-depth: 1

      # Runs a set of commands using the runners shell
      - name: 'Build LLVM'
        id: 'build_llvm'
        env:
          filename: 'clang+llvm-${{ env.llvm_version }}-${{ runner.os }}'
        run: |
          brew install ninja
          mkdir build
          #cmake -G Ninja -S llvm -B build -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD="ARM;X86;AArch64" -DCMAKE_INSTALL_PREFIX="${{ jobs.build_llvm.env.filename }}" -DPYTHON_EXECUTABLE=`which python3`
          #cmake --build build --target install
          mkdir ${{ jobs.build_llvm.env.filename }}
          touch ${{ jobs.build_llvm.env.filename }}/a.txt
          tar cjf ${{ jobs.build_llvm.env.filename }}.tar.bz2 ${{ jobs.build_llvm.env.filename }}
          
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ jobs.build_llvm.env.filename }}
          path: ${{ jobs.build_llvm.env.filename }}.tar.bz2
